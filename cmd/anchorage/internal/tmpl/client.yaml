enable: false # loaded then to work <bool>
config: # client config <*config.ClientConfig>
    nodes: # dial to server node list <[]config.NodeConfig>
        - nodeName: "" # must be <string>
          baseNetwork: # base network list <[]config.BaseNetworkConfig>
            - network: "" # must be tcp,udp(quic) <string>
              address: "" # work address <string>
#          exNetworks: # expand network list <[]config.ExNetworkConfig>
#            - network: "" # must be tcp,udp,quic,tls,ws,wss,http,https; if tcp or udp will without; tls, wss and https must have cert; if ws and http has cert will up grader to wss or https; quic optional cert. <string>
#              certFile: "" # cert file path <string>
#              keyFile: "" # key file path <string>
#              certRaw: "" # raw cert <string>
#              keyRaw: "" # raw key <string>
#              insecureSkipVerify: false # cert insecure skip verify <bool>
#          crypto: # crypto config <[]config.CryptoConfig>
#            - name: "" # crypto expand name <string>
#              crypto: "" # crypto type <string>
#              keyFiles: [] # key flies; if crypto is asymmetry, first is cert then key; if crypto is symmetry, only key. <[]string>
#              keys: [] # raw key; if crypto is asymmetry, first is cert then key; if crypto is symmetry, only key. <[]string>
#              priority: 0 # crypto priority <int8>
#          handshakeTimeout: 0 # handshake timeout (unit ms) <uint>
#          handleTimeout: 0 # handle timeout (unit ms) <uint>
#          auth: # node auth ( username  password ) <*config.AuthInfo>
#            username: ""
#            password: ""
